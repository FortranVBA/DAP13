version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

workflows:
  heroku_deploy:
    jobs:
      - build_main:
          filters:
            branches:
              only: main
      - build_test:
          filters:
            branches:
              ignore: main
      - deploy_with_heroku:
          requires:
            - build_main
          filters:
            branches:
              only: main


jobs:
  build_main:
    docker:
      - image: docker:20
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install docker-compose
          command: |
            apk add --update py3-pip
            pip3 install docker-compose==1.12.0
      - run:
          name: Build application Docker image from file
          command: |
            docker build -t fortranvba/dap13:dap13prod .
      - run:
          name: Run test
          command: |
            docker-compose -f ./docker-compose.test.yml up
      - store_artifacts:
          path: test-reports/
          destination: python_app
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u fortranvba -p $DOCKERHUB_PASSWORD
            docker push fortranvba/dap13:dap13prod
  build_test:
    docker:
      - image: fortranvba/dap13:dap13prod
    steps:
      - checkout
      - run:
          name: Run test
          command: |
            flake8
            python manage.py test
      - store_artifacts:
          path: test-reports/
          destination: python_app
  deploy_with_heroku:
    docker:
      - image: cimg/base:2021.07
    steps:
      - setup_remote_docker:
          version: 19.03.13
      # Build the docker image
      - checkout
      - run: docker build . --pull --no-cache --tag fortranvba/dap13:dap13prod

      # Deploy to Heroku
      - heroku/install
      - run: heroku container:login
      - heroku/push-docker-image:
          process-types: web
      - heroku/release-docker-image:
          process-types: web
